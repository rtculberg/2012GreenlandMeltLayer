These are the scripts used for the custom radar analyses underlying Culberg, et al "Extreme Ice Layers Reduce Firn Permeability
in Greenland's Interior". 

Dependencies:
This code has been run using MATLAB R2019b Update 7 (9.7.0.1371314) running on 64-bit Windows 10 Pro Version 1909 and MATLAB
R2017b (9.3.0.713579) running on 64-bit CentOS linux release 7.7.1908 (Core). We expect this code should be compatible with 
any MATLAB release from R2017b onwards.

Installation:
Unzip to the desired directory. Installation time on a typical desktop computer is on the order of a few seconds. If you wish 
to run the cross-season leveling script, you will also need to download CVX [http://cvxr.com/cvx/download/] and follow the 
installation instructions on that site. This should simply involve unzipping the downloaded directory to your desired location 
and then running the script cvx_setup.m from the MATLAB command line before running the CrossSeasonLeveling.m script. 

Directory Structure:
./ - top level scripts described below which peform the main analyses 
./DemoData - data used by the top level scripts for demonstration purposes. The scripts are configured to run directly on this 
             data.
./DerivedData - output data folder where results from scripts will be automatically saved
./ExpectedOutput - the expected output of each script on the provided demo data
./RefData - reference data (such as climate model outputs) referenced by some of the scripts
./ReferenceFunctions - secondary functions used by some of the main level scripts to run their analyses

Use:
There are four general blocks of top level scripts in the code. Block 1 is the Radar Data Calibration Block which is the set 
scripts needed to absolutely calibrate the radar reflectivities. Starting from raw data, scripts inthis block would be run first. 
The second block is the Radar Data Processing Block. It uses the raw radar data and calibration constants produced by Block 1 to 
to detect ice layers and invert the radar reflectivites for density and probability of impermeability. This block is run second
and produces the raw layer detections, minimum and maximum consistent layer densities, and probability that the layer density 
exceeds 0.81 g/cm^3. The third block is the Data Post-Processing Block. This block takes the outputs from block 2 and calculates 
the layer connectivity score, final layer density, and layer prominence as shown in Figure 2. It also includes the temporal 
analysis script comparing these outputs between 2013 and 2017. The final block is the Climate Analysis Block which takes the 
final data from block 3 and compares the radar metrics to climate variables from MARv3.5.2 to produce Figure 3.
All scripts are configured to run independently and demo data has been provided so that each script can be run directly without
following the full processing chain.

Descriptions of Top Level Scripts:

Block 1 - Radar Data Calibration:

RetrackSurface.m
	- This scripts retracks the ice surface in the CReSIS L1B radargrams. 
	- Time to Run: ~ 0.3s per radargram
	- Outputs:
		- surf - for each flight transect, save a .mat file containing the surf variable which is a 1xM cell array where M is the 
		  number of radargram segments in the flight transect. Each cell contains a 1xN vector of integers with the fast time sample 
		  location of the ice surface at that particular trace.
	- Data dependencies:
		- CReSIS L1B radargrams - ./DemoData/Data_20170422_01_158.mat for demoing the functionality

CleanSurfacePower.m
	- This scripts cleans the surface echo power data before leveling by removing area of power loss due to aircraft roll or other 
	  areas with exceptionally high or low power outside the expected variability of the signal. This script is intended to be run 
	  interactively, as the user will need to manually select the region of surface power that shows typical  variability in order 
	  to filter other regions. To run interactively, place cursor in the portion of code to execute and hit CTRL-ENTER.
    - Time to Run: ~ 0.3s per radargram
	- Outputs:
		- seg_num3 - radargram number
		- index3 - trace number in radargram segment
		- lat3 - latitude of measurements
		- lon3 - longitude of measurements
		- altitude3 - flight clearance over ice in meters
		- surf_geo_pow3 - surface echo power in dB
		- surf_ind3 - fast time sample location of ice surface in radargram
	- Data dependencies:
		- CReSIS L1B radargrams - ./DemoData/Data_20170422_01_158.mat for demoing the functionality	
		- Surface location and power tracking - ./DemoData/Demo_Surface.mat for	showing functionality (was originally generated by 
		  running RetrackSurface.m on all data)

CrossSeasonLeveling.m 
	- This scripts uses cleaned surface echo powers to geostatistically cross-level a set of flight transects. It gives a set of 
	  dc offsets that minimize the difference in surface power at crossovers in the least squares sense. This is not an absolute 
	  calibration, but a relative calibration that accounts for system differences between flights. 
	- Time to Run: ~2s (but will scale with number of transects)
	- Output:
		- dc_offsets - Mx1 double vector of calibration constants in dB where M is the number of flight transects being leveled 
		  and the order of the constants is the same order in which the flight transects occur in the input flight_tracks data 
		  structure
	- Data dependencies:
		- Cleaned surface power data - /DemoData/SurfaceData_2017.mat (this data is originally generated by the CleanSurfaceData.made
		  script)
	- IMPORTANT - you must install and setup CVX (http://cvxr.com/cvx/download/) before running this script!

DensityCalibration.m
	- This scripts calculates the absolute calibration coefficients for flight lines that intersect the North Greenland Traverse 
	  firn core sites (see Horhold, et al 2011 for discussion of these high resolution firn core measurements). As long as this 
	  flight line is also part of the leveling network used in CrossSeasonLeveling.m and those offsets have been normalized such 
	  that the offset at this tie transect is 0, then this output value can be added to the coefficients produced by that script 
	  to get the final calibration constants for all transects. 
	- Time to Run: ~1.5 min
	- Outputs:
		- S_final - absolute calibration coefficient in linear power units (scalar double)
	- Data dependencies:
		- High resolution firn core density profiles - ./RefData/density_268.mat include to demonstrate functionality
		- CReSIS L1B radargrams at the firn core sites; ./DemoData/Data_20120330_01_106.mat included to demonstrate the 
		  functionality


Block 2 - Radar Data Processing Block:

RunBackgroundDensity.m
	- This script calculates the mean background firn density as a function of depth from the IMAU FDM firn model outputs for all 
	  of Greenland.
	- Time to Run: ~ 12 min
	- Outputs:
		- background_depth - depth axis in meters (Mx1 double vector)
		- background_density - background density in g/cm^3 for all of Greenland (NxPxM double vector). The N axis is latitude and 
		  P is longitude as defined by the IMAU FDM grid.
	- Data dependencies:
		- IMAU FDM data - ./RefData/FGRN11_dens_Apr2012.nc

RadiometricReference.m
	- This script calculates the expected radar reflectivity of an icy layer given its density, thickness, and the density of the 
	  background firn. This calculation uses the transfer matrix based method described in Culberg & Schroeder, 'Strong Potential 
	  for the Detection of Ice Layers in Greenland's Firn by Airborne Radar Sounding', IGARSS 2020 to calculate the effective 
	  reflection coefficient of a stack of layers in a range bin.
	- Time to Run: ~ 3 hours per reference density
	- Outputs:
		- layer_reflectivity - an MxN matrix of doubles representing the mean layer reflectivity in dB. M is the range of layer 
		  thickness and N is the range of layer densities. 
	- Data dependencies:
		- Fitting coefficients for the mean density profiles - ./RefData/mean_density_model.mat
		- Fitting coefficients for the ARMA model describing the seasonal density variability - ./RefData/coefficients.mat
		- Range of seasonal variability - ./RefData/variability.mat

RadRefCube.m
	- This script interpolates the radiometric reference cube to the desired background density spacing based on the fully 
	  calculated reference squares at background densities of 0.35, 0.4, 0.45, 0.5, and 0.55 g/cm^3.	
	- Time to Run: ~3 min total
	- Outputs: 
		- radrefcube = MxNxP matrix of doubles representing the average ice layer reflectivity in layer thickness, layer density, 
		  and background density parameters space. M is the layer thickness axis, N is the layer density axis, and P is the 
		  background firn density axis.
	- Data dependencies:
		- Radiometric reference squares:
		- './RefData/LayerReflectRef_350.mat'
	    - './RefData/LayerReflectRef_400.mat'
		- './RefData/LayerReflectRef_450.mat'
		- './RefData/LayerReflectRef_500.mat'
		- './RefData/LayerReflectRef_550.mat'
		- These data files can be generated by running RadiometricReference.m but it will take about 14 hours to generate all of 
		  the squares. 

LayerDetection.m
	- This scripts uses the layer detection algorithm described Culberg & Schroeder, "Strong Potential for the Detection of 
	  Refrozen Ice Layers in Greenland's Firn," IGARSS 2020 to detect potential ice layers in CReSIS L1B Accumulation Radar 
	  radargrams. 
	- Time to runs: ~6s per 50km radargram processed 
	- Outputs:
	- [Date]_Layer.mat file for each flight. This is a 1xP cell array with one cell for each radargrams (segments) in the 
	  flight transect. Each cell contains the following data structures:
		- data - MxN matrix of doubles, where M is the fast time axis and N is the along-track axis. This takes a value of 
		  -200 if no ice layer is detected at a given sample and the geometrically corrected radar received power in dB if 
		  a layer is detected.
		- lat - N vector of latitude of each trace (WGS84)
		- lon - N vector of longitude for each trace (WGS84)
		- elev - N vector of surface elevation for each trace (WGS84)
	- Data dependencies:
		- CReSIS L1B radargrams for the transects being run. Due to the large data size, a single radargram is included as 
		  demo data for this function in /DemoData/Data_20170422_01_158.mat. 
		- Retracked surface location - /DemoData/Demo_Surface.mat (These retracked surface files can also be generated by 
		  running SurfaceTracker_KU.m on the radargrams of interest)

DensityInversion.mat
	- This scripts takes layer detections and inverts the received radar power  to estimate the minimum and maximum layer 
	  densities consistent with those observations. 
	- Time to Run: ~3s per 50km radargram processed
	- Outputs:
		- [Date]_Density.mat file for each flight. This is a 1xP cell array with one cell for each radargrams (segments) in 
		  the flight transect. Each cell contains the following data structures:
			- inversion_min - MxN matrix of doubles, where M is the fast time axis and N is the along-track axis. This contains 
			  the minimum density in g/cm^3 consistent with the radar observations. It takes a value of NaN if  no layer was detected and 
			  1000 if data was discarded due to excessive aircraft roll. 
			- inversion_max - MxN matrix of doubles, where M is the fast time axis and N is the along-track axis. This contains 
			  the maximum density in g/cm^3 consistent with the radar observations. It takes a value of NaN if no layer was detected and 
			  -1000 if data was discarded due to excessive aircraft roll. 
			- lat - N vector of latitude of each trace (WGS84)
			- lon - N vector of longitude for each trace (WGS84)
			- elev - N vector of surface elevation for each trace (WGS84)
			- base_density - MxN matrix of doubles, where M is the fast time axis and N is the along-track axis. This contains the 
		  background density assumed for each sample.
	- Data dependencies:
		- Background firn density - /RefData/BackgrounDensity.mat (This reference data can also be generated with the
          RunBackgroundDensity.m script)
		- Radar calibration constants - /DemoData/2017CalibrationConstants.mat (These calibration constants were originally 
		  generated by running Block 1 of the scripts.)
		- Layer detections - /DemoData/Demo_Layer_Detections (These results generated from LayerDetections.m)
		- Precalculated radiometric references - /RefData/RadiometricReferenceCube.mat (The radiometric reference cube was 
		  generated by running RadiometricReference.mat)

DensityProbabilityInversion.mat
	- This scripts takes layer detections and inverts the received radar power to estimate the probability that the layer density 
	  exceeds the threshold for impermeability (~ pore close-off, following Gregory, et al 2014). 
	- Time to Run: ~3s per 50km radargram processed
	- Outputs:
		- [Date]_ImpermProb.mat file for each flight. This is a 1xP cell array with one cell for each radargrams (segments) in 
		  the flight transect. Each cell contains the following data structures:
			- imperm_prob - MxN matrix of doubles, where M is the fast time axis and N is the along-track axis. This contains the 
			  probability [0,1] that the radar observations are consisten with a layer whose density exceeds 0.81 g/cm^3. It takes a 
			  value of NaN if no detections were made or roll was excessive. 
			- lat - N vector of latitude of each trace (WGS84)
			- lon - N vector of longitude for each trace (WGS84)
			- elev - N vector of surface elevation for each trace (WGS84)
			- base_density - MxN matrix of doubles, where M is the fast time axis and N is the along-track axis. This contains the 
			  background density assumed for each sample.
	- Data dependencies:
		- Background firn density - /RefData/BackgrounDensity.mat (This reference data can also be generated with the
          RunBackgroundDensity.m script)
		- Radar calibration constants - /DemoData/2017CalibrationConstants.mat (These calibration constants were originally 
		  generated by running Block 1 of the scripts.)
		- Layer detections - /DemoData/Demo_Layer_Detections (These results generated from LayerDetections.m)
		- Precalculated radiometric references - /RefData/RadiometricReferenceCube.mat (The radiometric reference cube was 
		  generated by running RadiometricReference.mat)

	
Block 3 - Data Post-Processing Block:

ConnectivityProcessing.m
	- This scripts take the raw layer detections from the radar data, calculates the connectivity metric, and averages it over 
	  1 km bins to create the final connectivity dataset shown in Figure 2.
	- Time to run: ~6s per flight transect
	- Outputs:
		- data - Mx3 matrix of doubles with location and connectivity scores for each 1 km grid bin
			- data(:,1) - latitude
			- data(:,2) - longitude
			- data(:,3) - connectivity score
	- Data dependencies:
		- Raw layer detections from radar - /Demo/Demo_Layer.mat
		- Mean climate data - /RefData/Greenland_5km_v1.1.nc

PostProcessing.m
	- This scripts takes the layer connectivity and raw probability of impermeability data and calculates the layer prominence 
	  metric in 1km bins as displayed in figure 2. It is also used to write the final combined data file with all the results.
	- Time to Run: ~41s per flight transect
	- Outputs:
		- data - Mx7 matrix of doubles
			- data(:,1) - latitude
			- data(:,2) - longitude
			- data(:,3) - layer prominence
			- data(:,4) - probability that layer density exceed 0.81 g/cm^3
			- data(:,5) - layer connectivity score
			- data(:,6) - minimum layer density consistent with radar observations
			- data(:,7) - maximum layer density consistent with radar observations
	- Data dependencies:
		- Probability of impermeability from radar reflectivity inversion - /DemoData/Demo_ImpermProb.mat
			- This input data file can also be created by running the top-level script DensityProbabilityInversion.m
		- Layer connectivity results - /DemoData/Demo_Connectivity.txt
			- This input data file can also be created by running the top-level script ConnectivityProcessing.m
		- Mean climate data - /RefData/Greenland_5km_v1.1.nc

TemporalAnalysis.m
	- This scripts calculates the layer connectivity and density along the overlapping 2013 transects and plots the data in the 
	  format used for Figure 4. It relies on the same base code as the ConnectivityProcessing.m and PostProcessing.m scripts. 
	- Time to Run: ~1 min
	- Outputs:
		- Transects B and C in Figure 4 from the main text
	- Data dependencies:
		- Raw layer connectivity results (2013) - /DemoData/Demo_Connectivity_2013.txt
		- Raw layer density results (2013) - /DemoData/Demo_Density_2013.txt
		- Final results on 2017 transect - /DemoData/Demo_FinalResults.txt
		- Mean climate data - /RefData/Greenland_5km_v1.1.nc
		- MAR-derived melt production - /RefData/TotalMelt_2013-2017.mat


Block 4 - Climate Analysis Block:

ClimateVariableCorrelations.m
	- This script calculates the 2D histograms and distance correlation coefficients between layer prominence and various climate 
	  variables. This script was used to produce Figure3, Extended Data Figure 1, and Extended Data Table 1.
	- Time to run: ~ 2 min per climate variable
	- Outputs:
		- Plots and distance correlation coefficients in Figure 3, Supplementary Figure 3, and Supplementary Table 1. 
		- x - 1xN vector of doubles, 2D histogram bin edges for climate variables
		- bin_edges - 1xQ vector of doubles, 2D histogram bin edges for layer prominence
		- hist_2d - QxN matrix of doubles, probability of a given layer prominence occuring for a given climate condition
	- Data dependencies:
		- 2012 MARv3.5.2 outputs - /RefData/MAR_DataExtract.mat
		- Long term climate averages from MARv3.10 - /RefData/MAR_20km_MeanVals_1980-2011.mat
		- Final results of radar analysis - /DemoData/IceLayerDetections/*.txt
		
