% Author: Riley Culberg
% Date: 12/7/2020
%
% This interpolates the radiometric reference cube to the desired
% background density spacing based on the fully calculated reference
% squares at background densities of 0.35, 0.4, 0.45, 0.5, and 0.55
% g/cm^3.
%
% Outputs:
%    radrefcube = MxNxP matrix of doubles representing the average ice
%    layer reflectivity in layer thickness, layer density, and background
%    density parameters space. M is the layer thickness axis, N is the
%    layer density axis, and P is the background firn density axis.
%
% Data dependencies:
% Radiometric reference squares:
%    - './RefData/LayerReflectRef_350.mat'
%    - './RefData/LayerReflectRef_400.mat'
%    - './RefData/LayerReflectRef_450.mat'
%    - './RefData/LayerReflectRef_500.mat'
%    - './RefData/LayerReflectRef_550.mat'
%    - These data files can be generated by running RadiometricReference.m
%      but it will take about 14 hours to generate all of the squares. 
% ------------------------------------------------------------------------

clear;

addpath(genpath('./ReferenceFunctions/'));

% Load the precalculated radiometric reference cubes at the background
% densities listed in rho
rho = [350 400 450 500 550];
radref_350 = load('./RefData/LayerReflectRef_350.mat');
radref_400 = load('./RefData/LayerReflectRef_400.mat');
radref_450 = load('./RefData/LayerReflectRef_450.mat');
radref_500 = load('./RefData/LayerReflectRef_500.mat');
radref_550 = load('./RefData/LayerReflectRef_550.mat');

% Desired background density step size
rho_prime = 350:1:550;
radrefcube = zeros(size(radref_350.layer_reflectivity,1), size(radref_350.layer_reflectivity,2), length(rho_prime));

% Linearly interpolated the radiometric reference for each parameter
% combination to the desired background density axis.
for q = 1:length(rho_prime)
    for k = 1:size(radrefcube, 1)
        for m = 1:size(radrefcube,2)
            rho_ref = [radref_350.layer_reflectivity(k,m) radref_400.layer_reflectivity(k,m)...
                radref_450.layer_reflectivity(k,m) radref_500.layer_reflectivity(k,m) ...
                radref_550.layer_reflectivity(k,m)];
            radrefcube(k,m,q) = interp1(rho, rho_ref, rho_prime(q));
        end
    end
end

% Save results
save('./DerivedData/RadiometricReferenceCube.mat', 'radrefcube');